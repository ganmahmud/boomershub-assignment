generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Define tables for State, County, City, and Zip Code
model State {
  id           Int        @id @default(autoincrement())
  name         String
  abbreviation String
  properties   Provider[]
  County       County[]
}

model County {
  id         Int        @id @default(autoincrement())
  name       String
  stateId    Int
  state      State      @relation(fields: [stateId], references: [id])
  properties Provider[]
  City       City[]
}

model City {
  id         Int        @id @default(autoincrement())
  name       String
  countyId   Int
  county     County     @relation(fields: [countyId], references: [id])
  properties Provider[]
  ZipCode    ZipCode[]
}

model ZipCode {
  id         Int        @id @default(autoincrement())
  code       String
  cityId     Int
  city       City       @relation(fields: [cityId], references: [id])
  properties Provider[]
}

// Provider table referencing State, County, City, and Zip Code
model Provider {
  id            Int             @id @default(autoincrement())
  scrapingId    String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  name          String
  address       String          @db.VarChar(255)
  phone         String
  type          String
  capacity      Int?
  stateId       Int
  countyId      Int
  cityId        Int
  zipCodeId     Int
  mapUrl        String?
  state         State           @relation(fields: [stateId], references: [id])
  county        County          @relation(fields: [countyId], references: [id])
  city          City            @relation(fields: [cityId], references: [id])
  zipCode       ZipCode         @relation(fields: [zipCodeId], references: [id])
  ProviderImage ProviderImage[]

  @@unique([name, address])
}

model ProviderImage {
  id         Int      @id @default(autoincrement())
  url        String
  providerId Int
  provider   Provider @relation(fields: [providerId], references: [id])
}
